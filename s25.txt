slip 25

#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>

int main() {
    // Open a file for writing (create if not exists, truncate if exists)
    int fileDescriptor = open("output.txt", O_WRONLY | O_CREAT | O_TRUNC, 0666);

    if (fileDescriptor == -1) {
        perror("Error opening file");
        return EXIT_FAILURE;
    }

    // Redirect standard output to the file
    if (dup2(fileDescriptor, STDOUT_FILENO) == -1) {
        perror("Error redirecting standard output");
        close(fileDescriptor);
        return EXIT_FAILURE;
    }

    // Close the file descriptor
    close(fileDescriptor);

    // Now, writing to stdout will go to the file
    printf("This text is redirected to output.txt\n");

    // Close the standard output
    close(STDOUT_FILENO);

    // Writing to stdout after closing will not have any effect
    printf("This text will not be displayed\n");

    return EXIT_SUCCESS;
}

gcc your_program_name.c -o your_program_name
./your_program_name


#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>

int main() {
    // Open a file for writing (create if not exists, truncate if exists)
    int fileDescriptor = open("output.txt", O_WRONLY | O_CREAT | O_TRUNC, 0666);

    if (fileDescriptor == -1) {
        perror("Error opening file");
        return EXIT_FAILURE;
    }

    // Duplicate the file descriptor onto the file descriptor for standard output
    if (dup2(fileDescriptor, STDOUT_FILENO) == -1) {
        perror("Error redirecting standard output");
        close(fileDescriptor);
        return EXIT_FAILURE;
    }

    // Close the original file descriptor
    close(fileDescriptor);

    // Writing to stdout will now go to the file
    printf("This text is redirected to output.txt\n");

    // Close standard output (optional, as the program is terminating)
    close(STDOUT_FILENO);

    // Writing to stdout after closing will not have any effect
    printf("This text will not be displayed\n");

    return EXIT_SUCCESS;
}
gcc your_program_name.c -o your_program_name
./your_program_name

